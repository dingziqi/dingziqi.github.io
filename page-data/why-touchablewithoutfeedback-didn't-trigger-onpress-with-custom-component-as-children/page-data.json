{"componentChunkName":"component---src-templates-blog-post-js","path":"/why-touchablewithoutfeedback-didn't-trigger-onpress-with-custom-component-as-children/","result":{"data":{"site":{"siteMetadata":{"title":"D.Z"}},"markdownRemark":{"id":"41797180-59b6-55d0-95ef-d906b3181c5e","excerpt":"最近在整理 React-Native 项目的公共组件时重新封装了一些新组件，但是在验证组件时却发现了 bug，同样的一个元素结构直接作为  的 children 的话表现是正常的，但是被封装到自定义组件内后就无法触发 onPress 事件了，大致的代码示例如下： 经过一番 google…","html":"<p>最近在整理 React-Native 项目的公共组件时重新封装了一些新组件，但是在验证组件时却发现了 bug，同样的一个元素结构直接作为 <code class=\"language-text\">TouchableWithoutFeedback</code> 的 children 的话表现是正常的，但是被封装到自定义组件内后就无法触发 onPress 事件了，大致的代码示例如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyText</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span> \n\n<span class=\"token operator\">...</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TouchableWithoutFeedback</span></span> <span class=\"token attr-name\">onpress</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">onPress 能正常触发</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TouchableWithoutFeedback</span></span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">TouchableWithoutFeedback</span></span> <span class=\"token attr-name\">onpress</span><span class=\"token script language-javascript\"><span class=\"token script-punctuation punctuation\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n  </span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">MyText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">onPress 不能触发</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">MyText</span></span><span class=\"token punctuation\">></span></span><span class=\"token plain-text\">\n</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">TouchableWithoutFeedback</span></span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>经过一番 google 后，发现原来官网有解释这个问题：</p>\n<blockquote>\n<p>Importantly, TouchableWithoutFeedback works by cloning its child and applying responder props to it.</p>\n</blockquote>\n<p>意思就是 TouchableWithoutFeed 会代理它 children 的 responder 属性，并通过属性传递下去，在上述封装的自定义场景中，TouchableWithoutFeedback 是把封装到的 responder 属性传递给了我们的 MyText 属性，但是我们的自定义组件并不能触发这些 responder，所以我们必须在封装自定义组件的时候再把剩余的属性全部向下传递。</p>\n<p>最终我们改造一下 MyText 组件即可正常触发 onPress 事件了。</p>\n<div class=\"gatsby-highlight\" data-language=\"jsx\"><pre class=\"language-jsx\"><code class=\"language-jsx\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">MyText</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">,</span> passedProps<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Text</span></span> <span class=\"token spread\"><span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>passedProps<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">></span></span><span class=\"token punctuation\">{</span>children<span class=\"token punctuation\">}</span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span><span class=\"token class-name\">Text</span></span><span class=\"token punctuation\">></span></span>\n<span class=\"token punctuation\">}</span>\n\n另外，TouchableOpacity 和 TouchableHightlight 并没有上述问题。我猜应该是这两个组件内部有子元素来接收封装的 responder 属性，因为这两个组件还有一些样式的行为也是需要有内部的元素来承担实现的。</code></pre></div>","frontmatter":{"title":"自定义组件外层TouchableWithoutFeedback无法触发onPress","date":"11-28, 2021","description":null,"tags":"react-native"}},"previous":{"fields":{"slug":"/gc-with-filereader/"},"frontmatter":{"title":"FileReader的内存回收"}},"next":{"fields":{"slug":"/issues-with-aliyun-oss/"},"frontmatter":{"title":"阿里云OSS使用的一些问题记录"}}},"pageContext":{"id":"41797180-59b6-55d0-95ef-d906b3181c5e","previousPostId":"5bf87d07-2704-5bf3-823c-c4a6f87a2dbf","nextPostId":"8882e676-9cf6-53c8-ad5b-248fec05a620"}},"staticQueryHashes":["2841359383"]}